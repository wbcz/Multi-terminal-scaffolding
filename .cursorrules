# 饿了么后台管理系统目录结构说明

# 根目录配置文件
/package.json               # 项目根配置文件，定义工作空间和公共依赖
/pnpm-workspace.yaml       # pnpm 工作空间配置
/tsconfig.json             # TypeScript 基础配置
/.env                      # 环境变量配置
/.gitignore               # Git 忽略文件配置
/README.md                # 项目说明文档

# Web 应用目录
/apps/web/                # Web 应用主目录
  package.json            # Web 应用配置文件
  tsconfig.json           # TypeScript 配置（继承根配置）
  tsconfig.node.json      # Vite 配置的 TypeScript 配置
  vite.config.ts         # Vite 构建工具配置
  index.html             # HTML 入口文件
  /src                   # 源代码目录
    /layouts             # 布局组件
    /pages              # 页面组件
    /hooks              # 自定义 Hooks
    /stores             # MobX 状态管理
    /utils              # 工具函数
    /types              # 类型定义
    main.tsx            # 应用入口
    routes.tsx          # 路由配置
    index.css           # 全局样式

# 共享包目录
/packages/               # 共享包根目录
  /api                  # API 接口封装
    package.json        # 包配置
    tsconfig.json       # TypeScript 配置
    /src               # 源代码
      index.ts         # 入口文件
      user.ts          # 用户相关接口

  /hooks               # 通用 Hooks
    package.json       # 包配置
    tsconfig.json      # TypeScript 配置
    /src              # 源代码
      index.ts        # 入口文件
      useRequest.ts   # 请求 Hook

  /types               # 类型定义
    package.json       # 包配置
    tsconfig.json      # TypeScript 配置
    /src              # 源代码
      index.ts        # 入口文件
      common.ts       # 通用类型定义

  /ui                  # UI 组件库
    package.json       # 包配置
    tsconfig.json      # TypeScript 配置
    /src              # 源代码
      index.ts        # 入口文件
      /Button         # 按钮组件

  /utils               # 工具函数
    package.json       # 包配置
    tsconfig.json      # TypeScript 配置
    /src              # 源代码
      index.ts        # 入口文件
      http.ts         # HTTP 工具
      date.ts         # 日期工具

# 说明：
# 1. 根目录的 package.json 定义公共开发依赖（devDependencies）
# 2. 子包的 package.json 可以通过 workspace:* 引用其他子包
# 3. 所有的 tsconfig.json 都继承根目录的 TypeScript 配置
# 4. pnpm workspace 确保依赖提升和包之间的链接
# 5. 共享包都从 src/index.ts 导出其功能

# 依赖管理说明：
# 1. 根目录 package.json：
#    - 定义工作空间配置
#    - 存放公共的开发工具依赖（如 TypeScript、ESLint）
#    - 定义跨包的公共脚本命令
#
# 2. 子包 package.json：
#    - 定义自己的特定依赖
#    - 使用 "workspace:*" 引用工作空间中的其他包
#    - 可以覆盖或添加自己的脚本命令
#
# 3. pnpm 工作空间特性：
#    - 依赖提升和复用
#    - 包之间的软链接
#    - 确保依赖版本一致性
#    - 支持并行执行脚本 